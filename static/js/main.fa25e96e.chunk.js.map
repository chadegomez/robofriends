{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","i","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","marginTop","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.fa25e96e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../Card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc card\">\r\n            <img  src={`https://robohash.org/${id}?200x200`} alt=\"robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport '../CardList.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card\r\n                        key={robots[i].id}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    />\r\n                })\r\n            }\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport '../SearchBox.css';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                type='search'\r\n                placeholder='Search here'\r\n                className=\"pa3 ba b--light-blue bg-lightest-blue\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: '800px', marginTop: '20px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Not good</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users})\r\n        )\r\n    }\r\n\r\n    onSearchChange = event => {\r\n        this.setState({ searchField: event.target.value});\r\n    } \r\n\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name\r\n                .toLowerCase()\r\n                .includes(searchField.toLowerCase())\r\n        })\r\n\r\n        return !robots.length ?\r\n            <h1 className=\"f2 neonText\">Loading...</h1> :\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2 neonText\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\t<React.StrictMode>\n\t\t<App />\n  \t</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}